---
- name: Create EC2 Instance
  hosts: localhost
  gather_facts: False
  vars:
    region: "ap-south-1"
    instance_type: "t2.micro"
    ami_id: "ami-0287a05f0ef0e9d9a"
    key_name: "ansible"
    subnet_id: "subnet-08800bade88b5283b"
    security_group: "ansible-sg"
    instance_name: "ansible-test-instance"
    vpc_id: "vpc-02925fd2ece64136d"
    ebs_volume_size_gb: "30"
    ebs_volume_device: "/dev/sdf"

  tasks:
    - name: Create Key Pair
      ec2_key:
        name: "{{ key_name }}"
        region: "{{ region }}"
      register: key_pair

    - name: debugging key pair
      debug:
        msg: "{{ key_pair }}"

    - name: Create Security Group
      ec2_group:
        name: "{{ security_group }}"
        description: "sg for ansible test"
        vpc_id: "{{ vpc_id }}"
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
      register: security_group_info

    - name: debugging security group
      debug:
        msg: "{{ security_group_info }}"

    - name: Launch EC2 Instance
      ec2_instance:
        name: "{{ instance_name }}"
        key_name: "{{ key_pair.key.name }}"
        instance_type: "{{ instance_type }}"
        image_id: "{{ ami_id }}"
        wait: yes
        region: "{{ region }}"
        vpc_subnet_id: "{{ subnet_id }}"
        security_groups:
          - "{{ security_group_info.group_id }}"
        volumes:
          - device_name: "{{ ebs_volume_device }}"
            ebs:
              volume_size: "{{ ebs_volume_size_gb }}"
              delete_on_termination: true
        # tags:
        #   - key: Name
        #     value: "{{ instance_name }}"
        #   - key: Environment
        #     value: "Production"
      register: ec2_info

    - name: debugging ec2 instance
      debug:
        msg: "{{ ec2_info }}"
